syntax = "proto3";

package biconom.types;

// Relationship представляет собой результат проверки иерархической связи между двумя объектами.
message Relationship {
	message State {
		// Определяет тип иерархической связи.
		enum Kind {
			// Отношение не определено (например, один из объектов не найден).
			UNSPECIFIED = 0;
			// Тот же самый объект (сравнение объекта с самим собой).
			PERSONAL = 1;
			// Целевой объект является дочерним по отношению к базовому (в его команде).
			TEAM = 2;
			// Целевой объект является родительским по отношению к базовому (в его спонсорской линии).
			UPLINE = 3;
			// Объекты находятся в одной иерархии, но не связаны по вертикали (например, "братья").
			SIDEWAYS = 4;
			// Объекты находятся в разных, не связанных иерархиях.
			SEPARATE = 5;
		}
		Kind kind = 1;							// Тип отношения между объектами.
		optional uint32 level_diff = 4;			// Разница в уровнях (для TEAM и UPLINE).
		optional uint32 branch_number = 5;		// Номер ветки, в которой находится дочерний объект (для TEAM).
	}
	uint32 base_id = 1;							// Базовый ID элемента, от которого строим отношение.
	uint32 target_id = 2;						// ID целевого элемента, чье отношение к базовому описывается.
	State state = 3;							// Состояние отношения между базовым и целевым элементами.
}
